AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Autonomous AI Agent that processes livestream transcripts

Parameters:
  EncryptionKey:
    Type: String
    Description: Key used for hashing cursors
    Default: ""
    NoEcho: true
  CORSOrigin:
    Type: String
    Default: "*"
  Domain:
    Type: String
    Default: "http://localhost:5173"

Metadata:
  esbuild-properties: &esbuild-properties
    Format: esm
    Minify: false
    OutExtension:
      - .js=.mjs
    Target: es2020
    Sourcemap: false
    EntryPoints:
      - index.mjs
    Banner:
      - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);
    External:
      - "@aws-sdk/*"
    Loader: []

Globals:
  Function:
    Runtime: nodejs22.x
    CodeUri: functions
    Architectures:
      - x86_64
    Tracing: Active
    Timeout: 25
    MemorySize: 1024
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
        ORIGIN: !Ref CORSOrigin

  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: !Sub "'${CORSOrigin}'"

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
      Auth:
        DefaultAuthorizer: LambdaAuthorizer
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          LambdaAuthorizer:
            FunctionPayloadType: REQUEST
            FunctionArn: !GetAtt ApiAuthorizer.Arn
            Identity:
              Headers:
                - Authorization
      MethodSettings:
        - MetricsEnabled: True
          ResourcePath: "/*"
          HttpMethod: "*"
          LoggingLevel: ERROR
          DataTraceEnabled: True
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openapi.yaml

  NullCheckTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  TranscriptBucket:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - !Ref CORSOrigin
            AllowedMethods:
              - GET
              - PUT
              - POST
              - HEAD
            AllowedHeaders:
              - "*"
            ExposedHeaders:
              - ETag
      LifecycleConfiguration:
        Rules:
          - Id: DeleteRule
            Status: Enabled
            ExpirationInDays: 7
      VersioningConfiguration:
        Status: Enabled
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true

  AgentMemory:
    Type: AWS::BedrockAgentCore::Memory
    Properties:
      Name: clipAgentMemory
      EventExpiryDuration: 90
      MemoryStrategies:
        - SummaryMemoryStrategy:
            Name: summaryMemory
            Description: The summarization of an entire transcription file
            Namespaces:
              - "{sessionId}-transcription"
        - SemanticMemoryStrategy:
            Name: semanticMemory
            Description: The topics and high-level coverage of content from the actor
            Namespaces:
              - "{actorId}-topics"

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    DeletionPolicy: Delete
    Properties:
      UserPoolName: !Sub "${AWS::StackName}-user-pool"
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: tenantId
          AttributeDataType: String
          Required: false
          Mutable: true
      LambdaConfig:
        PostConfirmation: !GetAtt PostConfirmationTrigger.Arn
        PreTokenGeneration: !GetAtt PreTokenGenerationTrigger.Arn
      UserPoolTags:
        Project: NullCheck

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub "${AWS::StackName}-client"
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      TokenValidityUnits:
        AccessToken: hours
        IdToken: hours
        RefreshToken: days
      AccessTokenValidity: 1
      IdTokenValidity: 1
      RefreshTokenValidity: 30
      CallbackURLs:
        - !Ref Domain
        - "http://localhost:5173"
      LogoutURLs:
        - !Ref Domain
        - "http://localhost:5173"
      SupportedIdentityProviders:
        - COGNITO

  ApiAuthorizer:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - auth/authorizer.mjs
    Properties:
      Handler: auth/authorizer.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:GetUser
              Resource: "*"
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref UserPoolClient

  PostConfirmationTrigger:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - auth/post-confirmation.mjs
    Properties:
      Handler: auth/post-confirmation.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminUpdateUserAttributes
              Resource: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*"

  PostConfirmationTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref PostConfirmationTrigger
      Action: lambda:InvokeFunction
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}"

  PreTokenGenerationTrigger:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - auth/pre-token-generation.mjs
    Properties:
      Handler: auth/pre-token-generation.handler
      Policies:
        - AWSLambdaBasicExecutionRole

  PreTokenGenerationTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref PreTokenGenerationTrigger
      Action: lambda:InvokeFunction
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}"

  ClipDetectorAgent:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - agents/clip-detector.mjs
    Properties:
      Handler: agents/clip-detector.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - bedrock-agentcore:CreateEvent
                - bedrock-agentcore:ListEvents
              Resource: !GetAtt AgentMemory.MemoryArn
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: !GetAtt NullCheckTable.Arn
            - Effect: Allow
              Action: bedrock:InvokeModel
              Resource:
                - !Sub arn:${AWS::Partition}:bedrock:us-east-1::inference-profile/global.anthropic.claude-sonnet-4-5-20250929-v1:0
            - Effect: Allow
              Action:
                - bedrock:ListInferenceProfiles
              Resource:
                - !Sub arn:${AWS::Partition}:bedrock:*:${AWS::AccountId}:inference-profile/us.amazon.nova-pro-v1:0
                - !Sub arn:${AWS::Partition}:bedrock:*::foundation-model/amazon.nova-pro-v1:0
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${TranscriptBucket}/*
      Environment:
        Variables:
          MEMORY_ID: !GetAtt AgentMemory.MemoryId
          TABLE_NAME: !Ref NullCheckTable
          MODEL_ID: us.amazon.nova-pro-v1:0
          BUCKET_NAME: !Ref TranscriptBucket

  TranscriptIngestFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - events/transcript-added.mjs
    Properties:
      Handler: events/transcript-added.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !GetAtt NullCheckTable.Arn
      Environment:
        Variables:
          BUCKET_NAME: !Ref TranscriptBucket
          TABLE_NAME: !Ref NullCheckTable
      Events:
        TranscriptAdded:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.s3
              detail-type:
                - Object Created
              detail:
                bucket:
                  name:
                    - !Ref TranscriptBucket
                object:
                  key:
                    - suffix: .srt

  ListEpisodesFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - episodes/list-episodes.mjs
    Properties:
      Handler: episodes/list-episodes.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Query
              Resource: !Sub "${NullCheckTable.Arn}/index/GSI1"
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
          ENCRYPTION_KEY: !Ref EncryptionKey
      Events:
        List:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /episodes
            Method: GET

  CreateEpisodeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - episodes/create-episode.mjs
    Properties:
      Handler: episodes/create-episode.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt NullCheckTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
      Events:
        Create:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /episodes
            Method: POST

  CreateTranscriptUploadFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - episodes/upload-transcript.mjs
    Properties:
      Handler: episodes/upload-transcript.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
              Resource: !GetAtt NullCheckTable.Arn
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub arn:${AWS::Partition}:s3:::${TranscriptBucket}/*
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
          BUCKET_NAME: !Ref TranscriptBucket
      Events:
        CreatePresigned:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /episodes/{episodeId}/transcripts
            Method: POST

  CreateTrackUploadFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - episodes/create-track-upload.mjs
    Properties:
      Handler: episodes/create-track-upload.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
              Resource: !GetAtt NullCheckTable.Arn
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub arn:${AWS::Partition}:s3:::${TranscriptBucket}/*
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
          BUCKET_NAME: !Ref TranscriptBucket
      Events:
        InitiateTrackUpload:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /episodes/{episodeId}/tracks
            Method: POST

  SignTrackPartsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - episodes/sign-track-parts.mjs
    Properties:
      Handler: episodes/sign-track-parts.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !GetAtt NullCheckTable.Arn
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub arn:${AWS::Partition}:s3:::${TranscriptBucket}/*
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
          BUCKET_NAME: !Ref TranscriptBucket
      Events:
        SignTrackParts:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /episodes/{episodeId}/tracks/{trackName}/parts
            Method: POST

  CompleteTrackUploadFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - episodes/complete-track-upload.mjs
    Properties:
      Handler: episodes/complete-track-upload.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:PutItem
              Resource: !GetAtt NullCheckTable.Arn
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub arn:${AWS::Partition}:s3:::${TranscriptBucket}/*
            - Effect: Allow
              Action:
                - events:PutEvents
              Resource: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
          BUCKET_NAME: !Ref TranscriptBucket
      Events:
        CompleteTrackUpload:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /episodes/{episodeId}/tracks/{trackName}/complete
            Method: POST

  UpdateTrackFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - episodes/update-track.mjs
    Properties:
      Handler: episodes/update-track.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:UpdateItem
              Resource: !GetAtt NullCheckTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
      Events:
        UpdateTrack:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /episodes/{episodeId}/tracks/{trackName}
            Method: PUT

  MediaConvertRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: mediaconvert.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MediaConvertS3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource: !Sub "${TranscriptBucket.Arn}/*"

  MediaConvertTriggerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - events/start-preprocessing.mjs
    Properties:
      Handler: events/start-preprocessing.handler
      Timeout: 60
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - mediaconvert:CreateJob
              Resource: "*"
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: !GetAtt MediaConvertRole.Arn
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !GetAtt NullCheckTable.Arn
      Environment:
        Variables:
          MEDIACONVERT_ROLE_ARN: !GetAtt MediaConvertRole.Arn
          BUCKET_NAME: !Ref TranscriptBucket
          TABLE_NAME: !Ref NullCheckTable
          CHUNK_SECONDS: "120"
      Events:
        VideoUploadCompleted:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - nullcheck
              detail-type:
                - Video Upload Completed

  MediaConvertCompletionFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - events/preprocessing-completed.mjs
    Properties:
      Handler: events/preprocessing-completed.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !GetAtt NullCheckTable.Arn
            - Effect: Allow
              Action:
                - s3:ListBucket
                - s3:GetObject
              Resource:
                - !GetAtt TranscriptBucket.Arn
                - !Sub "${TranscriptBucket.Arn}/*"
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
          BUCKET_NAME: !Ref TranscriptBucket
      Events:
        JobComplete:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.mediaconvert
              detail-type:
                - MediaConvert Job State Change
              detail:
                status:
                  - COMPLETE

  MediaConvertFailureFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - events/preprocessing-failed.mjs
    Properties:
      Handler: events/preprocessing-failed.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !GetAtt NullCheckTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
      Events:
        JobFailed:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.mediaconvert
              detail-type:
                - MediaConvert Job State Change
              detail:
                status:
                  - ERROR
                  - CANCELED

  VideoClipProcessingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: STANDARD
      DefinitionUri: ./state-machines/video-clip-processing.asl.json
      DefinitionSubstitutions:
        SegmentExtractorFunction: !Ref SegmentExtractorFunction
        ClipStitcherFunction: !Ref ClipStitcherFunction
        UpdateClipRecordFunction: !Ref UpdateClipRecordFunction
        TableName: !Ref NullCheckTable
      Policies:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt SegmentExtractorFunction.Arn
              - !GetAtt ClipStitcherFunction.Arn
              - !GetAtt UpdateClipRecordFunction.Arn
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:UpdateItem
            Resource: !GetAtt NullCheckTable.Arn

  SegmentExtractorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - video/segment-extractor.mjs
    Properties:
      Handler: video/segment-extractor.handler
      MemorySize: 3008
      Timeout: 900
      Layers:
        - !GetAtt FFMPEGLambdaLayer.Outputs.LayerVersion
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
              Resource: !Sub "${TranscriptBucket.Arn}/*"
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource:
                - !GetAtt TranscriptBucket.Arn
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Query
              Resource: !GetAtt NullCheckTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable
          BUCKET_NAME: !Ref TranscriptBucket

  ClipStitcherFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - video/clip-stitcher.mjs
    Properties:
      Handler: video/clip-stitcher.handler
      MemorySize: 3008
      Timeout: 600
      Layers:
        - !GetAtt FFMPEGLambdaLayer.Outputs.LayerVersion
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
                - s3:DeleteObject
              Resource: !Sub "${TranscriptBucket.Arn}/*"
      Environment:
        Variables:
          BUCKET_NAME: !Ref TranscriptBucket

  UpdateClipRecordFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        <<: *esbuild-properties
        EntryPoints:
          - video/update-clip-record.mjs
    Properties:
      Handler: video/update-clip-record.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !GetAtt NullCheckTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref NullCheckTable


  FFMPEGLambdaLayer:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:145266761615:applications/ffmpeg-lambda-layer
        SemanticVersion: 1.0.0

Outputs:
  ApiUrl:
    Description: API Gateway URL
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/api"

  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref CognitoUserPool

  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref UserPoolClient

  FFmpegLayerArn:
    Description: ARN of the FFmpeg Lambda Layer
    Value: !GetAtt FFMPEGLambdaLayer.Outputs.LayerVersion
